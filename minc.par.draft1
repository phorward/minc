#parser 			"MinC";
#version			"0.1 [grammar only]";
#copyright 			"Copyright (C) 2008 by Phorward Software Technologies";
#description		"A research compiler project";
#whitespaces		whitespace ;
#lexeme				const_str const_int const_float identifier var ;

#left				"==" "!=" ">=" "<=" '>' '<'	;
#left				'+' '-' ;
#left				'*' '/' '%' ;

//Grammar start --------------------------------------------------------------

program$			->	decl* body?
					;

//Declarations ---------------------------------------------------------------

decl				->	var_decl ';'
					;

var_decl			->	"int" var_list
					|	"string" var_list
					;

var_list			->	var const_assign?
					| 	var_list ',' var const_assign?
					;

const_assign		->	'=' const_expr
					;

//Body -----------------------------------------------------------------------

body				-> 	statements*
					;

statements			-> 	"if" '(' expr ')' body
					|	assign_expr
					| 	';'
					| 	'{' body '}'
					;

// Expressions ---------------------------------------------------------------

assign_expr			-> 	var '=' assign_expr
					| 	expr;

expr				->	expr "==" expr
					|	expr "!=" expr
					|	expr ">=" expr
					|	expr "<=" expr
					|	expr '>' expr
					|	expr '<' expr
					|	expr '+' expr
					|	expr '-' expr
					|	expr '*' expr
					|	expr '/' expr
					|	expr '%' expr
					|	'(' expr ')'
					|	factor
					;

factor				->	const_int
					|	const_str
					|	const_float
					|	var
					;

// Constant Expressions (to be evaluated at compile-time!) -------------------

const_expr			->	const_expr "==" const_expr
					|	const_expr "!=" const_expr
					|	const_expr ">=" const_expr
					|	const_expr "<=" const_expr
					|	const_expr '>' const_expr
					|	const_expr '<' const_expr
					|	const_expr '+' const_expr
					|	const_expr '-' const_expr
					|	const_expr '*' const_expr
					|	const_expr '/' const_expr
					|	const_expr '%' const_expr
					|	'(' const_expr ')'
					|	const_factor
					;

const_factor		->	const_int
					|	const_str
					|	const_float
					;

// Atomics -------------------------------------------------------------------

const_int			->	'0-9'+
					;

const_float			->	'0-9'+ '.' '0-9'*
					|	'0-9'* '.' '0-9'+
					;

const_str			->	'"' !'"'* '"'
					;

var					->	identifier
					;

identifier			->	'A-Za-z_' 'A-Za-z0-9_'*
					;

// Whitespaces --------------------------------------------------------------

whitespace			-> ' \t\r\n'
					| "//" !'\n'*
					;
